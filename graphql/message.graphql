type Message 
{
  id: ID!
  user_id: User! @belongsTo(relation: "user")
  conversation_id: Int!
  message: String!
  created_at: Date!
  updated_at: Date!
}

input messageInput
{
	id: ID
	friend_id: ID!
	message: String! @lower
}

extend type Query
{
  messages(page: Int!): [Message!]! @paginateAuth
}

extend type Mutation
{
  messageUpsert(input: messageInput! @spread): Message! @field(resolver: "MessageMutation@upsert")
  messageDelete(id: ID! @rules(apply: ["has:messages"]) @eq): Message @delete
}

extend type Subscription
{
  messageUpsert: Message!
}

